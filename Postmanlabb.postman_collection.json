{
	"info": {
		"_postman_id": "2e880036-206e-4005-9d50-c56b2b6f1b3e",
		"name": "Postman Labb",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Assignment",
			"item": [
				{
					"name": "List Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.globals.set(\"user_five_id\", jsonData.data[4].id);\r",
									"\r",
									"pm.test(\"Status Code is 200\", () => pm.expect(responseCode.code).to.equal(200));\r",
									"pm.test(\"Response Time is Below 2s\", () => pm.expect(pm.response.responseTime).to.be.below(2000));\r",
									"pm.test(\"Results each page is 6 (1)\", () => pm.expect(jsonData.data.length).to.equal(6));\r",
									"pm.test(\"Results each page is 6 (2)\", () => pm.expect(jsonData.per_page).to.equal(6));\r",
									"pm.test(\"Avatar second user first page not null\", () => pm.expect(jsonData.data[1].avatar).to.not.equal(null));\r",
									"pm.test(\"Last Name third result is Wong\", () => pm.expect(jsonData.data[2].last_name).to.equal(\"Wong\"));\r",
									"pm.test(\"Eve is somewhere\", () => pm.expect(pm.response.text()).to.include(\"Eve\"));\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Single User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"pm.test(\"Status Code is 200\", () => pm.expect(responseCode.code).to.equal(200));\r",
									"pm.test(\"Response Time is Below 2s\", () => pm.expect(pm.response.responseTime).to.be.below(2000));\r",
									"pm.test(\"User id equal to global var\", () => pm.expect(jsonData.data.id).to.equal(pm.globals.get(\"user_five_id\")));\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/users/{{user_five_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"{{user_five_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody); \r",
									"pm.globals.set(\"my_user_id\", jsonData.id);\r",
									"\r",
									"pm.test(\"Status Code is 201\", () => pm.expect(responseCode.code).to.equal(201));\r",
									"pm.test(\"Response Time is Below 2s\", () => pm.expect(pm.response.responseTime).to.be.below(2000));\r",
									"pm.test(\"Id Not null\", () => pm.expect(jsonData.id).to.not.equal(null));\r",
									"pm.test(\"createdAt Not Null\", () => pm.expect(jsonData.createdAt).to.not.equal(null));\r",
									"pm.test(\"Name is My Name\", () => pm.expect(jsonData.name).to.equal(\"Joakim Sorkka\"));\r",
									"pm.test(\"Job is My Dreamjob\", () => pm.expect(jsonData.job).to.equal(\"Film Director\"));\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Joakim Sorkka\",\r\n    \"job\": \"Film Director\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"pm.test(\"Status Code is 200\", () => pm.expect(responseCode.code).to.equal(200));\r",
									"pm.test(\"Response Time is Below 2s\", () => pm.expect(pm.response.responseTime).to.be.below(2000));\r",
									"pm.test(\"Job is updated\", () => pm.expect(jsonData.job).to.equal(\"Postman Master\"));\r",
									"pm.test(\"updatedAt Not Null\", () => pm.expect(jsonData.updatedAt).to.not.equal(null));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Joakim Sorkka\",\r\n    \"job\": \"Postman Master\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/users/{{my_user_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"{{my_user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status Code is 204\", () => pm.expect(responseCode.code).to.equal(204));\r",
									"pm.test(\"Response Time is Below 2s\", () => pm.expect(pm.response.responseTime).to.be.below(2000));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/users/{{my_user_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"{{my_user_id}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}